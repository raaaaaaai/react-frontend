# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self
pool: selh-host

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '5015615b-d173-4580-8214-1ce7b8304142'
  imageRepository: 'raaaaaaaireactfrontend'
  containerRegistry: 'pipelineregistry02.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/frontend/Dockerfile'
  tag: '$(Build.BuildId)'
  acrsecret: pipelinesecret


stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: PublishPipelineArtifact@1
      inputs:
       targetPath: '$(Pipeline.Workspace)'
       artifact: 'manifests'
       publishLocation: 'pipeline'
- stage: Deploy
  dependsOn: Build
  displayName: Deploy to Kubernetes
  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    environment: 'dev.default'
    strategy:
     runOnce:
       deploy:
        steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: 'current'
            artifactName: 'manifests'
            targetPath: '$(Pipeline.Workspace)'
        - task: KubernetesManifest@1
          inputs:
            action: 'createSecret'
            namespace: 'default'
            secretType: 'dockerRegistry'
            secretName: '$(acrsecret)'
            dockerRegistryEndpoint: 'pipelineregistry02-4579'
        - task: KubernetesManifest@1
          inputs:
            action: 'deploy'
            connectionType: 'kubernetesServiceConnection'
            namespace: 'default'
            manifests: |
              $(Pipeline.Workspace)/1/s/react-deploy.yml
              $(Pipeline.Workspace)/1/s/service-react.yml
            containers: '$(containerRegistry)/$(imageRepository):$(tag)'
        

